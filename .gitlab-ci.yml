stages:
  - build
  - test
  - release

variables:
  GIT_DEPTH: "3"
  IMAGE_LABELS: >
    --label vcs-url=$CI_PROJECT_URL
    --label com.skypicker.gitlab.ci.builder=$GITLAB_USER_EMAIL
    --label com.skypicker.gitlab.ci.pipeline=$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID
    --label com.skypicker.gitlab.ci.ref=$CI_BUILD_REF_NAME
    --label com.skypicker.gitlab.ci.build=$CI_PROJECT_URL/builds/$CI_BUILD_ID
  PYPI_CONFIG: |
    [distutils]
    index-servers =
      pypi
      pypitest

    [pypi]
    repository: https://upload.pypi.org/legacy/
    username: $PYPI_USERNAME
    password: $PYPI_PASSWORD

    [pypitest]
    repository: https://test.pypi.org/legacy/
    username: $PYPITEST_USERNAME
    password: $PYPITEST_PASSWORD

image: docker:18.06

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY || true

include:
  - 'https://ci-files.skypicker.com/templates/build/black.yml'

test:pytest:
  image: python:3.7
  services:
    - postgres
  variables:
    TEST_DB_URI: postgresql+psycopg2://postgres:@postgres:5432/test_db
    POSTGRES_DB: test_db
  before_script:
    - pip install -r requirements.txt pytest
  script:
    - pytest $CI_PROJECT_DIR/test/


release-pypi-test:
  stage: release
  image: python:3.7-alpine
  when: manual
  script:
   - echo "$PYPI_CONFIG" > ~/.pypirc
   - pip install -U twine
   - python setup.py sdist bdist_wheel
   - twine upload -r pypitest dist/*
  only:
   - master
   - tags


release-pypi:
  stage: release
  image: python:3.7-alpine
  when: manual
  script:
   - echo "$PYPI_CONFIG" > ~/.pypirc
   - pip install -U twine
   - python setup.py sdist bdist_wheel
   - twine upload -r pypi dist/*
  only:
   - master
   - tags
